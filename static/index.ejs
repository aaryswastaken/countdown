<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="/static/main.css">
        <link rel="stylesheet" href="/static/index.css">
    </head>
    <body>
        <div class="popup" id="popup" hidden>
            <div class="popup_bg" onclick="adiosPopup()"></div>
            <div class="popup_inner">
                <div class="popup_title_cnt">
                    <input class="popup_countdown_title" id="edit_countdown_name" value="Loading... ">
                    <div id="popup_id_display"># 1</div>
                </div>

                <div class="date_picker">
                    <input type="text" class="twod_sel" value="0" id="sel_hour">
                    <div>:</div>
                    <input type="text" class="twod_sel" value="0" id="sel_minutes">
                    <div>:</div>
                    <input type="text" class="twod_sel" value="0" id="sel_seconds">
                    <div class="separator"></div>
                    <input type="text" class="twod_sel" value="0" id="sel_day">
                    <div>-</div>
                    <input type="text" class="twod_sel" value="0" id="sel_month">
                    <div>-</div>
                    <input type="text" class="fourd_sel" value="0" id="sel_year">
                </div>

                <div class="delete_cnt">
                    <button onclick="requestDeletion()">Delete</button>
                </div>

                <div class="popup_selection">
                    <button onclick="validate()">Edit</button>
                    <button onclick="adiosPopup()">Cancel</button>
                </div>
            </div>
        </div>
        <div class="header">
            <ul class="top">
                <li class="padding"></li>
                <li class="title">
                    <div>
                        <i>Countdown</i>
                    </div>
                </li>
                <li class="user">
                    <div>Aarys Sahler</div>
                    <button id="new_cnt" onclick="requestNew()">+</button>
                </li>
            </ul>
        </div>
        <div class="main">
            <ul class="cards" id="main_cnt">
                <% countdowns.forEach(countdown => {%>
                    <li class="cards_item countdown" id="countdown_<%= countdown.id %>">
                        <div class="card">
                            <div class="card_title"> <%= countdown.name %></div>
                            <div class="card_underline"></div>
                            <div class="card_text"> Loading ... </div>
                        </div>
                    </li>
                <% }) %>
            </ul>
        </div>
        <script>
            var r_cnts = <%- JSON.stringify(countdowns) %>;

            function processCountdowns(raw) {
                return Object.fromEntries(raw.map(c => {
                    return [c.id, Object.fromEntries(Object.entries(c).filter(j => j[0] !== "id"))]
                }))
            }

            let countdowns = processCountdowns(r_cnts);
            let cache = [];
            let editing_id = NaN;
            const period = 50;
            let routineControl = true;

            function fill_popup(id) {
                document.getElementById("edit_countdown_name").value = countdowns[id].name;

                let date = new Date(countdowns[id].end);

                document.getElementById("sel_year").value = date.getFullYear();
                document.getElementById("sel_month").value = date.getMonth()+1;
                document.getElementById("sel_day").value = date.getDate();
                document.getElementById("sel_hour").value = date.getHours();
                document.getElementById("sel_minutes").value = date.getMinutes();
                document.getElementById("sel_seconds").value = date.getSeconds();

                document.getElementById("popup_id_display").innerText = "# "+id;

                editing_id = id;
            }

            function reset_popup() {
                document.getElementById("edit_countdown_name").value = "Loading... ";

                document.getElementById("sel_year").value = "0";
                document.getElementById("sel_month").value = "0";
                document.getElementById("sel_day").value = "0";
                document.getElementById("sel_hour").value = "0";
                document.getElementById("sel_minutes").value = "0";
                document.getElementById("sel_seconds").value = "0";

                editing_id = NaN;
            }

            function fetch_params() {
                let end = new Date();

                end.setFullYear(parseInt(document.getElementById("sel_year").value))
                end.setMonth(parseInt(document.getElementById("sel_month").value)-1)
                end.setDate(parseInt(document.getElementById("sel_day").value))
                end.setHours(parseInt(document.getElementById("sel_hour").value))
                end.setMinutes(parseInt(document.getElementById("sel_minutes").value))
                end.setSeconds(parseInt(document.getElementById("sel_seconds").value))

                let new_name = document.getElementById("edit_countdown_name").value;

                let edited = [];

                if (new_name != countdowns[editing_id].name) {
                    edited.push('new_name');
                }

                if (end.getTime() != countdowns[editing_id].end) {
                    edited.push('new_epoch')
                }

                return { new_epoch: end.getTime(), new_name , edited }
            }

            function refresh_cache() {
                const get = new XMLHttpRequest();
                get.onreadystatechange = () => {
                    if (get.readyState == 4) {
                        if (get.status == 200) {
                            r_cnts = get.responseText;
                            countdowns = processCountdowns(JSON.parse(r_cnts));
                        } else {
                            alert("[GET] Something happened: "+get.responseText);
                        }
                    }
                }

                get.open("GET", "/api/countdowns", true);
                get.send();
            }

            function refresh_entries() {
                let cnt = document.getElementById("main_cnt");

                Array.from(document.getElementsByClassName("countdown")).forEach(cdown_e => {
                    let id = cdown_e.id.split("_")[1];

                    let grp = Array.from(cdown_e.children[0].children);

                    grp.forEach(e => {
                        let c_l = Array.from(e.classList);
                        if (c_l.includes('card_title')) {
                            e.innerText = countdowns[id].name;
                        }
                    })
                })

                stopRoutine();
                startRoutine();
            }

            function validate() {
                if (isNaN(editing_id)) {
                    console.log("Error: tried to validate while editing_id is NaN")
                    return;
                }

                let params = fetch_params();

                // Filter by edited
                let r_params = Object.fromEntries(Object.entries(params).filter(e => params.edited.includes(e[0])));

                const post = new XMLHttpRequest();
                post.onreadystatechange = () => {
                    if (post.readyState == 4) {
                        if (post.status == 200) {
                            refresh_cache();
                            setTimeout(refresh_entries, 50);
                            adiosPopup();
                        } else {
                            alert("[POST] Something happened: "+post.responseText);
                        }
                    }
                }

                let url = "/api/countdowns/edit/"+editing_id+"?"+Object.entries(r_params).map(p => p[0]+"="+p[1]).join("&");

                console.log(url)

                post.open("POST", url, true);
                post.send();
            }

            function _routine() {
                cache.forEach(cdown => {
                    let target = countdowns[cdown.id].end;

                    let now = Date.now();

                    if (target < now) {
                        cdown.text.innerText = "Finished!";

                        return
                    }

                    let diff = new Date(target-now);
                    let full = (parseInt((diff.getTime()/(3600*24*1000)).toString().split(".")[0]))+" jours "+diff.getUTCHours()+" heures "+diff.getUTCMinutes()+" minutes "+diff.getUTCSeconds()+" secondes";

                    cdown.text.innerText = full;
                });

                if (routineControl) {
                    setTimeout(_routine, period);
                }
            }

            function stopRoutine() {
                routineControl = false;
            }

            function startRoutine() {
                // Populate cache
                cache = Array.from(document.getElementsByClassName("countdown")).map(cdown_e => {
                    let temp = {};

                    let id = cdown_e.id.split("_")[1];
                    temp.id = id;

                    let grp = Array.from(cdown_e.children[0].children);

                    grp.forEach(e => {
                        let c_l = Array.from(e.classList);
                        if (c_l.includes('card_title')) {
                            temp.title = e;
                        }

                        if (c_l.includes('card_text')) {
                            temp.text = e;
                        }
                    });

                    return temp;
                });

                routineControl = true;
                _routine();
            }

            function spawnPopup(id) {
                fill_popup(id);
                document.getElementById("popup").hidden = false;
            }

            function adiosPopup() {
                reset_popup();
                document.getElementById("popup").hidden = true;
            }

            function setupPopup(parent) {
                let id = parent.id.split("_")[1];
                console.log("Setting popup for "+id)

                parent.onclick = () => {
                    spawnPopup(id);
                }
            }

            function requestNew() {
                const post_new = new XMLHttpRequest();
                post_new.onreadystatechange = () => {
                    if (post_new.readyState == 4) {
                        if (post_new.status == 200) {
                            location.reload();
                        } else {
                            alert("[POST] Something happened: "+post_new.responseText);
                        }
                    }
                }

                post_new.open("POST", "/api/countdowns/new", true);
                post_new.send();
            }

            function requestDeletion() {
                let id = editing_id;

                const post_del = new XMLHttpRequest();
                post_del.onreadystatechange = () => {
                    if (post_del.readyState == 4) {
                        if (post_del.status == 200) {
                            location.reload();
                        } else {
                            alert("[POST] Something happened: "+post_del.responseText);
                        }
                    }
                }

                post_del.open("POST", "/api/countdowns/delete/"+id, true);
                post_del.send();
            }

            // ****** ONREADY ******
            Array.from(document.getElementsByClassName("countdown")).forEach(c => {
                setupPopup(c);
            });

            startRoutine();
        </script>
    </body>
</html>